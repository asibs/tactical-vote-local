import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'
import { useState } from 'react'
import axios from 'axios'

import Layout from '../components/Layout'
import LookupPostcode from '../components/LookupPostcode'
import SelectAddress from '../components/SelectAddress'
import { getPathFromElectionId } from '../lib/democracyClub/electionIdHelpers'
import { AddressData } from '../types'

type Step = 'LOOKUP_POSTCODE' | 'SELECT_ADDRESS' | 'NO_ELECTION'

export default function Home() {
  const [step, setStep] = useState<Step>('LOOKUP_POSTCODE')

  const [loading, setLoading] = useState(false)

  const DEFAULT_ERROR_MESSAGE = "Oops, something went wrong. Please try entering your postcode again."
  const [error, setError] = useState('')

  const [postcode, setPostcode] = useState('')
  const [addresses, setAddresses] = useState<Array<AddressData>>([])
  const [selectedAddress, setSelectedAddress] = useState('')

  const router = useRouter()

  const lookupAddress = () => {
    setLoading(true)
    setError('')

    axios.get('/api/postcodeLookup', {
      params: {
        postcode: postcode,
        addressSlug: selectedAddress,
      }
    }).then(function (response) {
      console.log("Success", response.data)

      if (response.data.addressPicker) {
        console.log("Got some addresses!", response.data.addresses)
        setAddresses(response.data.addresses)
        setStep('SELECT_ADDRESS')
        setLoading(false)
      } else if (response.data.featuredBallot) {
        console.log("Found the ward & ballot!", response.data.featuredBallot)
        // Redirect to the council/ward page
        try {
          const path = getPathFromElectionId(response.data.featuredBallot.ballotPaperId)
          console.log(`Redirecting to ${path}`)
          router.push(path)
          // TODO: pass on otherBallots as a URL param so they can be shown as well as the local election?
        } catch (error) {
          handleError(DEFAULT_ERROR_MESSAGE)
        }
      } else {
        // Found the ward, but no featuredBallot
        console.log("Found the ward with no ballot!")
        setStep('NO_ELECTION')
        setLoading(false)
      }
    }).catch(function(error) {
      handleError(error?.response?.data?.userError)
    })
  }

  const handleError = (errorMessage: string) => {
    setError(errorMessage || DEFAULT_ERROR_MESSAGE)
    setStep('LOOKUP_POSTCODE')
    setLoading(false)
  }

  return (
    <>
      <Head>
        <title>Local Tactical Voting</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        {step === 'LOOKUP_POSTCODE' && (
          <LookupPostcode
            postcode={postcode}
            setPostcode={setPostcode}
            loading={loading}
            error={error}
            onClick={lookupAddress}
          />
        )}

        {step === 'SELECT_ADDRESS' && (
          <SelectAddress
            addresses={addresses}
            selectedAddress={selectedAddress}
            setSelectedAddress={setSelectedAddress}
            loading={loading}
            error={error}
            onClick={lookupAddress}
          />
        )}

        {step === 'NO_ELECTION' && (
          <p>Looks like you don&apos;t have an upcoming election</p>
        )}
      </Layout>
    </>
  )
}
